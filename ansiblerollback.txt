================================================================================================================================================
                                                    ANSIBLE DEPLOYMENT AND ROLLBACK PLAYBOOK
================================================================================================================================================


Canary Deployment with Ansible
 canary.yml
-----------------------------------------------------------------------------------------------------------------------------------------------
#
# This playbook can do a canary deployment or a rollback of a previous deployment.
# Internally it executes a different subset of tasks, depending if it should be a 
# deployment or it should be a rollback.
#
# To start a canary deployment call this:
#     $ ansible-playbook /deployment/canary.yml
#
# To rollback a previous canary deployment call the playbook with additioonal paramter "rollback=true":
#     $ ansible-playbook /deployment/canary.yml -e rollback=true
#
# The rollback just works, if no other deployment has been made meanwhile
---
- name: start a canary deployment
  hosts: system[0]         # limits tasks to first host
  gather_facts: yes
  remote_user: myUser
  sudo: true
  serial: 1
  
  vars:
    - artifact_home: /target/deploy-artifacts
  
  vars_files:
    - "/version.yml"
  tasks:
    - include: tasks/system.yml
      when: rollback is undefined

    - include: tasks/system-rollback.yml
      when: rollback is defined

    - include: tasks/start_tomcat.yml
      vars:
        app_version: rollback
-----------------------------------------------------------------------------------------------------------------------------------------------
 start-tomcat.yml
----------------------------------------------------------------------------------------------------------------------------------------------
- name: start tomcat
  service: name=tomcat-system state=started

- name: wait for tomcat to be available
  wait_for: port=8080 delay=20

- name: wait for ping to be available, timeout 300 sec, poll every 5 sec
  uri: url=http://localhost:8080/ping status_code=200 timeout=300 return_content=yes
  async: 300
  poll: 5
-----------------------------------------------------------------------------------------------------------------------------------------------
 system-rollback.yml
-----------------------------------------------------------------------------------------------------------------------------------------------
- name: check if backup file exists
  stat: path="/www/tomcat/tomcat-system/backup/ROOT.war"
  register: st

- name: check if backup file exists
  fail: msg="Abort rollback. Backup file doesn't exist"
  when: not st.stat.exists

- name: stop tomcat
  service: name=tomcat-system state=stopped

- name: clean tomcat
  file: path={{ item }} state=absent
  with_items:
    - "/www/tomcat/tomcat-system/webapps/ROOT.war"
    - "/www/tomcat/tomcat-system/webapps/ROOT"

- name: reactivate backup of previous webapp.war
  command: mv "/www/tomcat/tomcat-system/backup/ROOT.war" "/www/tomcat/tomcat-system/webapps/ROOT.war"
------------------------------------------------------------------------------------------------------------------------------------------------
 system.yml
------------------------------------------------------------------------------------------------------------------------------------------------
- name: stop tomcat
  service: name=tomcat-system state=stopped

- name: clean possible backup file from tomcat
  file: path= {{ item }} state=absent
  with_items:
    - "/www/tomcat/tomcat-system/backup/ROOT.war"

- name: create backup if it doesn't exist
  file: path="/www/tomcat/tomcat-system/backup" state=directory mode=0755

- name: move current webapp.war to backup
  command: mv "/www/tomcat/tomcat-system/webapps/ROOT.war" "/www/tomcat/tomcat-system/backup/ROOT.war"  

- name: clean tomcat
  file: path={{ item }} state=absent
  with_items:
    - "/www/tomcat/tomcat-system/webapps/ROOT.war"
    - "/www/tomcat/tomcat-system/webapps/ROOT"

- name: copy war to server
  copy: src={{ artifact_home }}/system-{{} app_version }}.war
        dest=/www/tomcat/tomcat-system/webapps/ROOT.war
        owner=myUser group=tomcat mode=644